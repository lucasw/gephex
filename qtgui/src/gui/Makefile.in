# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AR = @AR@
AS = @AS@
AVIFILE_CONFIG = @AVIFILE_CONFIG@
AVIFILE_CXXFLAGS = @AVIFILE_CXXFLAGS@
AVIFILE_LDFLAGS = @AVIFILE_LDFLAGS@
CC = @CC@
CXX = @CXX@
CXXCPP = @CXXCPP@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EFFECTV_SRC_DIR = @EFFECTV_SRC_DIR@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
HAVE_LIB = @HAVE_LIB@
LIB = @LIB@
LIBTOOL = @LIBTOOL@
LIB_DL_FLAGS = @LIB_DL_FLAGS@
LIB_EXTRA_FLAGS = @LIB_EXTRA_FLAGS@
LIB_POSIX4_FLAGS = @LIB_POSIX4_FLAGS@
LIB_SOCKET_FLAGS = @LIB_SOCKET_FLAGS@
LN_S = @LN_S@
LTLIB = @LTLIB@
MAKEINFO = @MAKEINFO@
MOC = @MOC@
MPEG3_LDFLAGS = @MPEG3_LDFLAGS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
QT_CXXFLAGS = @QT_CXXFLAGS@
QT_LIBS = @QT_LIBS@
RANLIB = @RANLIB@
RC = @RC@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_IMAGE_LDFLAGS = @SDL_IMAGE_LDFLAGS@
SDL_LIBS = @SDL_LIBS@
SDL_PREFIX = @SDL_PREFIX@
STRIP = @STRIP@
UIC = @UIC@
VERSION = @VERSION@

SUBDIRS = base editor typeviews

AM_CPPFLAGS =  	-I $(srcdir)/.. 	-I $(srcdir)/../.. 	-I $(srcdir)/../../../util/include 	-I @builddir@/../../../util/include 	-I $(srcdir)/../../../base/src/ 	-I $(srcdir)/../../../base/src/utils 	-I @builddir@/../../../base/src/ 	-I $(srcdir)/../../../base/src/net 	-I $(srcdir)/../../../base/src/netinterfaces 	$(QT_CXXFLAGS)


bin_PROGRAMS = gephex-gui

CPP_FILES =  	nodewidget.cpp 	connectionwidget.cpp 	main.cpp 	vjmainwindow.cpp 	controlwidget.cpp 	moduleclassview.cpp 	propertywidget.cpp 	picswitch.cpp 	nodeproperty.cpp 	propertywidgetconstructor.cpp 	hidebuttonconstructor.cpp 	hidebutton.cpp 	plugwidget.cpp 	inputplugwidget.cpp 	outputplugwidget.cpp 	sequenceeditor.cpp 	dllselectordialog.cpp 	sequencewidget.cpp 	scenewidget.cpp 	graphnameview.cpp 	sequencenameview.cpp 	playlist.cpp 	playlistnameview.cpp 	moduleclasstabview.cpp 	uebertab.cpp 	modulebutton.cpp 	videowallcontrollwidget.cpp 	guiconfig.cpp 	typeview.cpp 	typeviewfactory.cpp 	aboutdialog.cpp


MOCED_FILES =  	playlist_moc.cpp 	dllselectordialog_moc.cpp 	sequenceeditor_moc.cpp 	plugwidget_moc.cpp 	sequencewidget_moc.cpp 	outputplugwidget_moc.cpp 	inputplugwidget_moc.cpp 	moduleclassview_moc.cpp 	propertywidget_moc.cpp 	vjmainwindow_moc.cpp 	controlwidget_moc.cpp 	graphnameview_moc.cpp 	videowallcontrollwidget_moc.cpp 	picswitch_moc.cpp 	hidebutton_moc.cpp 	sequencenameview_moc.cpp 	nodewidget_moc.cpp 	playlistnameview_moc.cpp 	modulebutton_moc.cpp 	moduleclasstabview_moc.cpp 	typeview_moc.cpp


BUILT_SOURCES = $(MOCED_FILES)

HEADER_FILES =  	connectionwidget.h 	controlwidget.h 	dllselectordialog.h 	graphnameview.h 	hidebuttonconstructor.h 	hidebutton.h 	imoduleinfobasestation.h 	inputplugwidget.h 	modulebutton.h 	moduleclassview.h 	nodeproperty.h 	nodewidget.h 	outputplugwidget.h 	ownstyle.h 	picswitch.h 	plugwidget.h 	propertywidgetconstructor.h 	propertywidget.h 	scenewidget.h 	sequenceeditor.h 	sequencenameview.h 	sequencewidget.h 	videowallcontrollwidget.h 	vjmainwindow.h 	playlist.h 	playlistnameview.h 	moduleclasstabview.h 	uebertab.h 	guiconfig.h 	typeview.h 	typeviewfactory.h 	aboutdialog.h


EXTRA_DIST =  	node.xpm 	inplugfree.xpm 	inplugbusy.xpm 	outplugfree.xpm 	outplugbusy.xpm 	rot_klein.xpm 	gruen_klein.xpm


gephex_gui_SOURCES = $(CPP_FILES) $(HEADER_FILES) $(MOCED_FILES)

gephex_gui_LDADD =  	$(QT_LIBS) 	-lguimodel 	-lgphxnetwork 	-lnetinterfaces 	-lguibase 	-lguieditor 	-ltypeviews 	-lutils 	-L@builddir@/../guimodel 	-L@builddir@/../../../base/src/net 	-L@builddir@/../../../base/src/netinterfaces 	-L@builddir@/../../../base/src/utils 	-L@builddir@/base 	-L@builddir@/editor 	-L@builddir@/typeviews


gephex_gui_DEPENDENCIES =  	@builddir@/../guimodel/libguimodel.a 	@builddir@/../../../base/src/net/libgphxnetwork.a 	@builddir@/../../../base/src/netinterfaces/libnetinterfaces.a 	@builddir@/../../../base/src/utils/libutils.a 	@builddir@/base/libguibase.a 	@builddir@/editor/libguieditor.a 	@builddir@/typeviews/libtypeviews.a


CLEANFILES = $(MOCED_FILES)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../../../config.h
CONFIG_CLEAN_FILES = 
bin_PROGRAMS =  gephex-gui$(EXEEXT)
PROGRAMS =  $(bin_PROGRAMS)


DEFS = @DEFS@ -I. -I$(srcdir) -I../../..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
gephex_gui_OBJECTS =  nodewidget.$(OBJEXT) connectionwidget.$(OBJEXT) \
main.$(OBJEXT) vjmainwindow.$(OBJEXT) controlwidget.$(OBJEXT) \
moduleclassview.$(OBJEXT) propertywidget.$(OBJEXT) picswitch.$(OBJEXT) \
nodeproperty.$(OBJEXT) propertywidgetconstructor.$(OBJEXT) \
hidebuttonconstructor.$(OBJEXT) hidebutton.$(OBJEXT) \
plugwidget.$(OBJEXT) inputplugwidget.$(OBJEXT) \
outputplugwidget.$(OBJEXT) sequenceeditor.$(OBJEXT) \
dllselectordialog.$(OBJEXT) sequencewidget.$(OBJEXT) \
scenewidget.$(OBJEXT) graphnameview.$(OBJEXT) \
sequencenameview.$(OBJEXT) playlist.$(OBJEXT) \
playlistnameview.$(OBJEXT) moduleclasstabview.$(OBJEXT) \
uebertab.$(OBJEXT) modulebutton.$(OBJEXT) \
videowallcontrollwidget.$(OBJEXT) guiconfig.$(OBJEXT) \
typeview.$(OBJEXT) typeviewfactory.$(OBJEXT) aboutdialog.$(OBJEXT) \
playlist_moc.$(OBJEXT) dllselectordialog_moc.$(OBJEXT) \
sequenceeditor_moc.$(OBJEXT) plugwidget_moc.$(OBJEXT) \
sequencewidget_moc.$(OBJEXT) outputplugwidget_moc.$(OBJEXT) \
inputplugwidget_moc.$(OBJEXT) moduleclassview_moc.$(OBJEXT) \
propertywidget_moc.$(OBJEXT) vjmainwindow_moc.$(OBJEXT) \
controlwidget_moc.$(OBJEXT) graphnameview_moc.$(OBJEXT) \
videowallcontrollwidget_moc.$(OBJEXT) picswitch_moc.$(OBJEXT) \
hidebutton_moc.$(OBJEXT) sequencenameview_moc.$(OBJEXT) \
nodewidget_moc.$(OBJEXT) playlistnameview_moc.$(OBJEXT) \
modulebutton_moc.$(OBJEXT) moduleclasstabview_moc.$(OBJEXT) \
typeview_moc.$(OBJEXT)
gephex_gui_LDFLAGS = 
CXXFLAGS = @CXXFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
SOURCES = $(gephex_gui_SOURCES)
OBJECTS = $(gephex_gui_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps qtgui/src/gui/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-binPROGRAMS:

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

distclean-binPROGRAMS:

maintainer-clean-binPROGRAMS:

install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`"; \
	    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	list='$(bin_PROGRAMS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \
	done

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

gephex-gui$(EXEEXT): $(gephex_gui_OBJECTS) $(gephex_gui_DEPENDENCIES)
	@rm -f gephex-gui$(EXEEXT)
	$(CXXLINK) $(gephex_gui_LDFLAGS) $(gephex_gui_OBJECTS) $(gephex_gui_LDADD) $(LIBS)
.cpp.o:
	$(CXXCOMPILE) -c $<
.cpp.obj:
	$(CXXCOMPILE) -c `cygpath -w $<`
.cpp.lo:
	$(LTCXXCOMPILE) -c $<

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.

@SET_MAKE@

all-recursive install-data-recursive install-exec-recursive \
installdirs-recursive install-recursive uninstall-recursive  \
check-recursive installcheck-recursive info-recursive dvi-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $(MAKEFLAGS); amf=$$2; \
	dot_seen=no; \
	rev=''; list='$(SUBDIRS)'; for subdir in $$list; do \
	  rev="$$subdir $$rev"; \
	  test "$$subdir" != "." || dot_seen=yes; \
	done; \
	test "$$dot_seen" = "no" && rev=". $$rev"; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
   if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
   fi; \
	done; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags -o $$here/TAGS $(ETAGS_ARGS) $$tags  $$unique $(LISP))

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = qtgui/src/gui

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
	for subdir in $(SUBDIRS); do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    chmod 777 $(distdir)/$$subdir; \
	    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(top_distdir) distdir=../$(distdir)/$$subdir distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-hook
aboutdialog.o: aboutdialog.cpp aboutdialog.h ../../../config.h
connectionwidget.o: connectionwidget.cpp connectionwidget.h \
	inputplugwidget.h plugwidget.h outputplugwidget.h
controlwidget.o: controlwidget.cpp controlwidget.h \
	../../../base/src/interfaces/icontrolvaluereceiver.h typeview.h \
	../../../base/src/utils/buffer.h
controlwidget_moc.o: controlwidget_moc.cpp controlwidget.h \
	../../../base/src/interfaces/icontrolvaluereceiver.h
dllselectordialog.o: dllselectordialog.cpp dllselectordialog.h \
	../../../base/src/interfaces/imoduleclassnamereceiver.h \
	../guimodel/imoduleclassview.h ../guimodel/moduleinfo.h \
	../guimodel/pluginfo.h ../../../base/src/utils/autoptr.h \
	../../../base/src/interfaces/imoduleclassloadercontrolreceiver.h
dllselectordialog_moc.o: dllselectordialog_moc.cpp dllselectordialog.h \
	../../../base/src/interfaces/imoduleclassnamereceiver.h \
	../guimodel/imoduleclassview.h
graphnameview.o: graphnameview.cpp graphnameview.h base/treeview.h \
	../../../base/src/interfaces/igraphnamereceiver.h \
	../../../base/src/utils/autoptr.h \
	../../../base/src/interfaces/imodelcontrolreceiver.h \
	../../../base/src/interfaces/ierrorreceiver.h \
	../guimodel/iscenesequencer.h base/askforstringdialog.h \
	base/treeviewitem.h ../../../base/src/utils/stringtokenizer.h \
	../../../base/src/utils/itokenizer.h
graphnameview_moc.o: graphnameview_moc.cpp graphnameview.h \
	base/treeview.h \
	../../../base/src/interfaces/igraphnamereceiver.h \
	../../../base/src/utils/autoptr.h
guiconfig.o: guiconfig.cpp guiconfig.h \
	../../../base/src/utils/structreader.h \
	../../../base/src/utils/autoptr.h ../../../config.h \
	../../../base/src/utils/filesystem.h
hidebutton.o: hidebutton.cpp hidebutton.h inputplugwidget.h plugwidget.h
hidebutton_moc.o: hidebutton_moc.cpp hidebutton.h
hidebuttonconstructor.o: hidebuttonconstructor.cpp \
	hidebuttonconstructor.h base/iwidgetconstructor.h hidebutton.h
inputplugwidget.o: inputplugwidget.cpp inputplugwidget.h plugwidget.h
inputplugwidget_moc.o: inputplugwidget_moc.cpp inputplugwidget.h \
	plugwidget.h
main.o: main.cpp ../../../config.h ownstyle.h vjmainwindow.h \
	../../../base/src/interfaces/irendererstatusreceiver.h \
	../../../base/src/utils/autoptr.h guiconfig.h \
	../../../base/src/utils/structreader.h
modulebutton.o: modulebutton.cpp modulebutton.h
modulebutton_moc.o: modulebutton_moc.cpp modulebutton.h
moduleclasstabview.o: moduleclasstabview.cpp moduleclasstabview.h \
	imoduleinfobasestation.h ../guimodel/imoduleclassview.h \
	../../../base/src/utils/autoptr.h ../guimodel/moduleinfo.h \
	../guimodel/pluginfo.h ../guimodel/xpm.h modulebutton.h \
	uebertab.h
moduleclasstabview_moc.o: moduleclasstabview_moc.cpp \
	moduleclasstabview.h imoduleinfobasestation.h \
	../guimodel/imoduleclassview.h \
	../../../base/src/utils/autoptr.h
moduleclassview.o: moduleclassview.cpp moduleclassview.h \
	imoduleinfobasestation.h ../guimodel/imoduleclassview.h \
	../../../base/src/utils/autoptr.h ../guimodel/moduleinfo.h \
	../guimodel/pluginfo.h ../guimodel/xpm.h
moduleclassview_moc.o: moduleclassview_moc.cpp moduleclassview.h \
	imoduleinfobasestation.h ../guimodel/imoduleclassview.h \
	../../../base/src/utils/autoptr.h
nodeproperty.o: nodeproperty.cpp nodeproperty.h \
	base/ipropertydescription.h ../../../base/src/utils/autoptr.h \
	typeviewfactory.h propertywidgetconstructor.h \
	base/iwidgetconstructor.h hidebuttonconstructor.h \
	inputplugwidget.h plugwidget.h ../guimodel/moduleinfo.h \
	../guimodel/pluginfo.h ../../../base/src/utils/structreader.h
nodewidget.o: nodewidget.cpp nodewidget.h \
	../../../base/src/utils/autoptr.h nodeproperty.h \
	base/ipropertydescription.h ../guimodel/moduleinfo.h \
	../guimodel/pluginfo.h ../guimodel/xpm.h \
	../../../base/src/utils/stringtokenizer.h \
	../../../base/src/utils/itokenizer.h \
	../../../base/src/utils/structreader.h \
	../../../base/src/utils/buffer.h inputplugwidget.h plugwidget.h \
	outputplugwidget.h base/keyboardmanager.h base/ikeylistener.h \
	base/key.h ../../../base/src/interfaces/imodelcontrolreceiver.h \
	../../../base/src/interfaces/ierrorreceiver.h
nodewidget_moc.o: nodewidget_moc.cpp nodewidget.h \
	../../../base/src/utils/autoptr.h
outputplugwidget.o: outputplugwidget.cpp outputplugwidget.h plugwidget.h
outputplugwidget_moc.o: outputplugwidget_moc.cpp outputplugwidget.h \
	plugwidget.h
picswitch.o: picswitch.cpp picswitch.h
picswitch_moc.o: picswitch_moc.cpp picswitch.h
playlist.o: playlist.cpp playlist.h \
	../../../base/src/interfaces/isequencerstatusreceiver.h \
	../guimodel/iscenechangelistener.h \
	../../../base/src/utils/autoptr.h \
	../../../base/src/interfaces/isequencercontrolreceiver.h \
	../guimodel/iscenesequencer.h base/askforstringdialog.h
playlist_moc.o: playlist_moc.cpp playlist.h \
	../../../base/src/interfaces/isequencerstatusreceiver.h \
	../guimodel/iscenechangelistener.h \
	../../../base/src/utils/autoptr.h
playlistnameview.o: playlistnameview.cpp playlistnameview.h \
	../../../base/src/interfaces/isequencenamereceiver.h \
	../../../base/src/utils/autoptr.h base/treeview.h \
	base/treeviewitem.h base/askforstringdialog.h \
	../../../base/src/interfaces/isequencercontrolreceiver.h
playlistnameview_moc.o: playlistnameview_moc.cpp playlistnameview.h \
	../../../base/src/interfaces/isequencenamereceiver.h \
	../../../base/src/utils/autoptr.h
plugwidget.o: plugwidget.cpp plugwidget.h
plugwidget_moc.o: plugwidget_moc.cpp plugwidget.h
propertywidget.o: propertywidget.cpp propertywidget.h \
	../../../base/src/interfaces/icontrolvaluereceiver.h \
	../../../base/src/utils/buffer.h \
	../../../base/src/interfaces/imodelcontrolreceiver.h typeview.h
propertywidget_moc.o: propertywidget_moc.cpp propertywidget.h \
	../../../base/src/interfaces/icontrolvaluereceiver.h \
	../../../base/src/utils/buffer.h
propertywidgetconstructor.o: propertywidgetconstructor.cpp \
	propertywidgetconstructor.h base/iwidgetconstructor.h \
	propertywidget.h \
	../../../base/src/interfaces/icontrolvaluereceiver.h \
	../../../base/src/utils/buffer.h \
	../guimodel/controlvaluedispatcher.h ../guimodel/point.h
scenewidget.o: scenewidget.cpp scenewidget.h
sequenceeditor.o: sequenceeditor.cpp sequenceeditor.h \
	../../../base/src/interfaces/isequenceupdatereceiver.h \
	../../../base/src/interfaces/isequencerstatusreceiver.h \
	../guimodel/iscenechangelistener.h sequencewidget.h \
	../../../base/src/utils/autoptr.h \
	../../../base/src/interfaces/isequencercontrolreceiver.h \
	../guimodel/iscenesequencer.h
sequenceeditor_moc.o: sequenceeditor_moc.cpp sequenceeditor.h \
	../../../base/src/interfaces/isequenceupdatereceiver.h \
	../../../base/src/interfaces/isequencerstatusreceiver.h \
	../guimodel/iscenechangelistener.h
sequencenameview.o: sequencenameview.cpp sequencenameview.h \
	../../../base/src/interfaces/isequencenamereceiver.h \
	../../../base/src/utils/autoptr.h base/treeview.h \
	base/treeviewitem.h base/askforstringdialog.h \
	../../../base/src/interfaces/isequencercontrolreceiver.h \
	../guimodel/iscenesequencer.h
sequencenameview_moc.o: sequencenameview_moc.cpp sequencenameview.h \
	../../../base/src/interfaces/isequencenamereceiver.h \
	../../../base/src/utils/autoptr.h
sequencewidget.o: sequencewidget.cpp sequencewidget.h \
	../../../base/src/utils/autoptr.h scenewidget.h \
	../../../base/src/utils/stringtokenizer.h \
	../../../base/src/utils/itokenizer.h
sequencewidget_moc.o: sequencewidget_moc.cpp sequencewidget.h \
	../../../base/src/utils/autoptr.h
typeview.o: typeview.cpp typeview.h ../../../base/src/utils/buffer.h
typeview_moc.o: typeview_moc.cpp typeview.h \
	../../../base/src/utils/buffer.h
typeviewfactory.o: typeviewfactory.cpp typeviewfactory.h \
	../../../config.h typeview.h ../../../base/src/utils/buffer.h \
	typeviews/boundednumberview.h ../gui/typeview.h \
	typeviews/unboundednumberview.h typeviews/slidernumberview.h \
	typeviews/dialnumberview.h typeviews/radionumberview.h \
	typeviews/checkboxnumberview.h typeviews/stringview.h \
	typeviews/comboboxstringview.h typeviews/filestringview.h \
	typeviews/positionview.h typeviews/colorview.h \
	typeviews/fontview.h
uebertab.o: uebertab.cpp uebertab.h
videowallcontrollwidget.o: videowallcontrollwidget.cpp \
	videowallcontrollwidget.h propertywidget.h \
	../../../base/src/interfaces/icontrolvaluereceiver.h \
	../../../base/src/utils/buffer.h
videowallcontrollwidget_moc.o: videowallcontrollwidget_moc.cpp \
	videowallcontrollwidget.h propertywidget.h \
	../../../base/src/interfaces/icontrolvaluereceiver.h \
	../../../base/src/utils/buffer.h
vjmainwindow.o: vjmainwindow.cpp vjmainwindow.h \
	../../../base/src/interfaces/irendererstatusreceiver.h \
	../../../base/src/utils/autoptr.h base/propertyview.h \
	base/logwindow.h ../../../base/src/interfaces/ierrorreceiver.h \
	base/keyboardmanager.h editor/editorwidget.h moduleclassview.h \
	imoduleinfobasestation.h ../guimodel/imoduleclassview.h \
	graphnameview.h base/treeview.h \
	../../../base/src/interfaces/igraphnamereceiver.h \
	sequencenameview.h \
	../../../base/src/interfaces/isequencenamereceiver.h \
	playlistnameview.h picswitch.h dllselectordialog.h \
	../../../base/src/interfaces/imoduleclassnamereceiver.h \
	playlist.h \
	../../../base/src/interfaces/isequencerstatusreceiver.h \
	../guimodel/iscenechangelistener.h sequenceeditor.h \
	../../../base/src/interfaces/isequenceupdatereceiver.h \
	aboutdialog.h \
	../../../base/src/interfaces/ienginecontrolreceiver.h \
	../../../base/src/interfaces/irenderercontrolreceiver.h \
	../../../base/src/interfaces/isequencercontrolreceiver.h \
	../../../base/src/interfaces/igraphnamesender.h \
	../../../base/src/interfaces/imoduleclassnamesender.h \
	../../../base/src/interfaces/isequencenamesender.h \
	../../../base/src/interfaces/isequenceupdatesender.h \
	../../../base/src/interfaces/ierrorsender.h \
	../../../base/src/interfaces/irendererstatussender.h \
	../../../base/src/interfaces/isequencerstatussender.h \
	../guimodel/enginewrapper.h ../../../util/include/basic_types.h \
	../guimodel/moduleclassmodel.h \
	../../../base/src/interfaces/imoduleclassinforeceiver.h \
	../guimodel/actionsequencerwrapper.h \
	../guimodel/iscenesequencer.h \
	../../../base/src/interfaces/isequencercontrolsender.h \
	rot_klein.xpm gruen_klein.xpm \
	../../../base/src/utils/structreader.h
vjmainwindow_moc.o: vjmainwindow_moc.cpp vjmainwindow.h \
	../../../base/src/interfaces/irendererstatusreceiver.h \
	../../../base/src/utils/autoptr.h

info-am:
info: info-recursive
dvi-am:
dvi: dvi-recursive
check-am: all-am
check: check-recursive
installcheck-am:
installcheck: installcheck-recursive
install-exec-am: install-binPROGRAMS
install-exec: install-exec-recursive

install-data-am:
install-data: install-data-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-recursive
uninstall-am: uninstall-binPROGRAMS
uninstall: uninstall-recursive
all-am: Makefile $(PROGRAMS)
all-redirect: all-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs)  $(DESTDIR)$(bindir)


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-binPROGRAMS mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-recursive

clean-am:  clean-binPROGRAMS clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-recursive

distclean-am:  distclean-binPROGRAMS distclean-compile distclean-libtool \
		distclean-tags distclean-generic clean-am
	-rm -f libtool

distclean: distclean-recursive

maintainer-clean-am:  maintainer-clean-binPROGRAMS \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-recursive

.PHONY: mostlyclean-binPROGRAMS distclean-binPROGRAMS clean-binPROGRAMS \
maintainer-clean-binPROGRAMS uninstall-binPROGRAMS install-binPROGRAMS \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool install-data-recursive \
uninstall-data-recursive install-exec-recursive \
uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \
all-recursive check-recursive installcheck-recursive info-recursive \
dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \
maintainer-clean-recursive tags tags-recursive mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs-am \
installdirs mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


dist-hook:
	rm -f $(distdir)/*_moc.cpp

Makefile: $(BUILT_SOURCES)

%_moc.cpp: %.h
	$(MOC) -o $@ $<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
