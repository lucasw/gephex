# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
infodir = @infodir@
mandir = @mandir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
CC = @CC@
CXX = @CXX@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EXEEXT = @EXEEXT@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PYTHON = @PYTHON@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@

baseincludedir = @includedir@/gephex
includedir = @includedir@/gephex/netinterfaces
libdir = @libdir@/gephex

# bin_PROGRAMS = netinterfacetest
lib_LIBRARIES = libnetinterfaces.a

libnetinterfaces_a_SOURCES =  		sequencercontrolsendernet.cpp 		sequencercontrolreceivernet.cpp 		enginecontrolsendernet.cpp 		enginecontrolreceivernet.cpp 		moduleclassloadercontrolsendernet.cpp 		moduleclassloadercontrolreceivernet.cpp 		renderercontrolreceivernet.cpp 		renderercontrolsendernet.cpp 		modelcontrolreceivernet.cpp 		moduledatareceivernet.cpp 		moduledatasendernet.cpp 		moduleclassnamereceivernet.cpp 		moduleclassnamesendernet.cpp 		moduleconstructiondumbreceivernet.cpp 		modelcontrolsendernet.cpp 		moduleconstructiondumbsendernet.cpp 		moduleclassinforeceivernet.cpp 		moduleclassinfosendernet.cpp 		controlvaluereceivernet.cpp 		controlvaluesendernet.cpp 		modulestatisticsreceivernet.cpp 		modulestatisticssendernet.cpp 		errorsendernet.cpp 		errorreceivernet.cpp 		graphnamereceivernet.cpp 		graphnamesendernet.cpp 		sequenceupdatereceivernet.cpp 		sequenceupdatesendernet.cpp 		sequencenamesendernet.cpp 		sequencenamereceivernet.cpp 		sequencerstatussendernet.cpp 		sequencerstatusreceivernet.cpp 		modelstatusreceivernet.cpp 		modelstatussendernet.cpp 		rendererstatusreceivernet.cpp 		rendererstatussendernet.cpp


include_HEADERS =  		controlvaluereceivernet.h 		controlvaluesendernet.h 		enginecontrolreceivernet.h 		enginecontrolsendernet.h 		errorreceivernet.h 		errorsendernet.h 		graphnamereceivernet.h 		graphnamesendernet.h 		modelcontrolreceivernet.h 		modelcontrolsendernet.h 		moduleclassinforeceivernet.h 		moduleclassinfosendernet.h 		moduleclassloadercontrolreceivernet.h 		moduleclassloadercontrolsendernet.h 		moduleclassnamereceivernet.h 		moduleclassnamesendernet.h 		moduleconstructiondumbreceivernet.h 		moduleconstructiondumbsendernet.h 		moduledatareceivernet.h 		moduledatasendernet.h 		modulestatisticsreceivernet.h 		modulestatisticssendernet.h 		nodelcontrolreceivertest.h 		renderercontrolreceivernet.h 		renderercontrolsendernet.h 		sequencenamereceivernet.h 		sequencenamesendernet.h 		sequencercontrolreceivernet.h 		sequencercontrolsendernet.h 		sequenceupdatereceivernet.h 		sequenceupdatesendernet.h 		sequencerstatussendernet.h 		sequencerstatusreceivernet.h 		modelstatusreceivernet.h 		modelstatussendernet.h 		rendererstatusreceivernet.h 		rendererstatussendernet.h


INCLUDES = -I .. #-I $(baseincludedir)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../../config.h
CONFIG_CLEAN_FILES = 
LIBRARIES =  $(lib_LIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I../..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libnetinterfaces_a_LIBADD = 
libnetinterfaces_a_OBJECTS =  sequencercontrolsendernet.$(OBJEXT) \
sequencercontrolreceivernet.$(OBJEXT) enginecontrolsendernet.$(OBJEXT) \
enginecontrolreceivernet.$(OBJEXT) \
moduleclassloadercontrolsendernet.$(OBJEXT) \
moduleclassloadercontrolreceivernet.$(OBJEXT) \
renderercontrolreceivernet.$(OBJEXT) renderercontrolsendernet.$(OBJEXT) \
modelcontrolreceivernet.$(OBJEXT) moduledatareceivernet.$(OBJEXT) \
moduledatasendernet.$(OBJEXT) moduleclassnamereceivernet.$(OBJEXT) \
moduleclassnamesendernet.$(OBJEXT) \
moduleconstructiondumbreceivernet.$(OBJEXT) \
modelcontrolsendernet.$(OBJEXT) \
moduleconstructiondumbsendernet.$(OBJEXT) \
moduleclassinforeceivernet.$(OBJEXT) moduleclassinfosendernet.$(OBJEXT) \
controlvaluereceivernet.$(OBJEXT) controlvaluesendernet.$(OBJEXT) \
modulestatisticsreceivernet.$(OBJEXT) \
modulestatisticssendernet.$(OBJEXT) errorsendernet.$(OBJEXT) \
errorreceivernet.$(OBJEXT) graphnamereceivernet.$(OBJEXT) \
graphnamesendernet.$(OBJEXT) sequenceupdatereceivernet.$(OBJEXT) \
sequenceupdatesendernet.$(OBJEXT) sequencenamesendernet.$(OBJEXT) \
sequencenamereceivernet.$(OBJEXT) sequencerstatussendernet.$(OBJEXT) \
sequencerstatusreceivernet.$(OBJEXT) modelstatusreceivernet.$(OBJEXT) \
modelstatussendernet.$(OBJEXT) rendererstatusreceivernet.$(OBJEXT) \
rendererstatussendernet.$(OBJEXT)
AR = ar
CXXFLAGS = @CXXFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(include_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
DEP_FILES =  .deps/controlvaluereceivernet.P \
.deps/controlvaluesendernet.P .deps/enginecontrolreceivernet.P \
.deps/enginecontrolsendernet.P .deps/errorreceivernet.P \
.deps/errorsendernet.P .deps/graphnamereceivernet.P \
.deps/graphnamesendernet.P .deps/modelcontrolreceivernet.P \
.deps/modelcontrolsendernet.P .deps/modelstatusreceivernet.P \
.deps/modelstatussendernet.P .deps/moduleclassinforeceivernet.P \
.deps/moduleclassinfosendernet.P \
.deps/moduleclassloadercontrolreceivernet.P \
.deps/moduleclassloadercontrolsendernet.P \
.deps/moduleclassnamereceivernet.P .deps/moduleclassnamesendernet.P \
.deps/moduleconstructiondumbreceivernet.P \
.deps/moduleconstructiondumbsendernet.P .deps/moduledatareceivernet.P \
.deps/moduledatasendernet.P .deps/modulestatisticsreceivernet.P \
.deps/modulestatisticssendernet.P .deps/renderercontrolreceivernet.P \
.deps/renderercontrolsendernet.P .deps/rendererstatusreceivernet.P \
.deps/rendererstatussendernet.P .deps/sequencenamereceivernet.P \
.deps/sequencenamesendernet.P .deps/sequencercontrolreceivernet.P \
.deps/sequencercontrolsendernet.P .deps/sequencerstatusreceivernet.P \
.deps/sequencerstatussendernet.P .deps/sequenceupdatereceivernet.P \
.deps/sequenceupdatesendernet.P
SOURCES = $(libnetinterfaces_a_SOURCES)
OBJECTS = $(libnetinterfaces_a_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu src/netinterfaces/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-libLIBRARIES:

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

distclean-libLIBRARIES:

maintainer-clean-libLIBRARIES:

install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(libdir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(lib_LIBRARIES)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libnetinterfaces.a: $(libnetinterfaces_a_OBJECTS) $(libnetinterfaces_a_DEPENDENCIES)
	-rm -f libnetinterfaces.a
	$(AR) cru libnetinterfaces.a $(libnetinterfaces_a_OBJECTS) $(libnetinterfaces_a_LIBADD)
	$(RANLIB) libnetinterfaces.a
.cpp.o:
	$(CXXCOMPILE) -c $<
.cpp.obj:
	$(CXXCOMPILE) -c `cygpath -w $<`
.cpp.lo:
	$(LTCXXCOMPILE) -c $<

install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d= ; else d="$(srcdir)/"; fi; \
	  echo " $(INSTALL_DATA) $$d$$p $(DESTDIR)$(includedir)/$$p"; \
	  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(includedir)/$$p; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	list='$(include_HEADERS)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(includedir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags -o $$here/TAGS $(ETAGS_ARGS) $$tags  $$unique $(LISP))

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = src/netinterfaces

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu src/netinterfaces/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp

%.o: %.cpp
	@echo '$(CXXCOMPILE) -c $<'; \
	$(CXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.cpp
	@echo '$(LTCXXCOMPILE) -c $<'; \
	$(LTCXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am: install-libLIBRARIES
install-exec: install-exec-am

install-data-am: install-includeHEADERS
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-libLIBRARIES uninstall-includeHEADERS
uninstall: uninstall-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(libdir) $(DESTDIR)$(includedir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-libLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags mostlyclean-depend \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-libLIBRARIES clean-compile clean-libtool clean-tags \
		clean-depend clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-libLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-depend \
		distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-libLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-depend \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-libLIBRARIES distclean-libLIBRARIES \
clean-libLIBRARIES maintainer-clean-libLIBRARIES uninstall-libLIBRARIES \
install-libLIBRARIES mostlyclean-compile distclean-compile \
clean-compile maintainer-clean-compile mostlyclean-libtool \
distclean-libtool clean-libtool maintainer-clean-libtool \
uninstall-includeHEADERS install-includeHEADERS tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir \
mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info-am info dvi-am dvi check check-am \
installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


#classinfotest.h

# netinterfacetest_SOURCES = testmain.cpp classinfotest.cpp nodelcontrolreceivertest.cpp

# netinterfacetest_LDADD = ../TestFramework/libtestframework.la libnetinterfaces.a ../utils/libutils.a

%receivernet.h: ../interfaces/%.if
	python $(top_builddir)/nic.py nrh . $<

%receivernet.cpp: ../interfaces/%.if %receivernet.h
	python $(top_builddir)/nic.py nrc . $<

%sendernet.h: ../interfaces/%.if
	python $(top_builddir)/nic.py nsh . $<

%sendernet.cpp: ../interfaces/%.if %sendernet.h
	python $(top_builddir)/nic.py nsc . $<

clean:
	rm -f *sendernet.cpp *sendernet.h *receivernet.cpp *receivernet.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
