# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ../../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AS = @AS@
AVIFILE_CONFIG = @AVIFILE_CONFIG@
AVIFILE_CXXFLAGS = @AVIFILE_CXXFLAGS@
AVIFILE_LDFLAGS = @AVIFILE_LDFLAGS@
CC = @CC@
CXX = @CXX@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EFFECTV_SRC_DIR = @EFFECTV_SRC_DIR@
EXEEXT = @EXEEXT@
LEX = @LEX@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MAKEINFO = @MAKEINFO@
MOC = @MOC@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
QT_CXXFLAGS = @QT_CXXFLAGS@
QT_LIBS = @QT_LIBS@
RANLIB = @RANLIB@
SDL_CFLAGS = @SDL_CFLAGS@
SDL_CONFIG = @SDL_CONFIG@
SDL_LIBS = @SDL_LIBS@
STRIP = @STRIP@
UIC = @UIC@
VERSION = @VERSION@
YACC = @YACC@

INCLUDES = -I @builddir@/.. -I @srcdir@/.. -I @top_srcdir@/util/include

noinst_LIBRARIES = libnetinterfaces.a

libnetinterfaces_a_SOURCES =  		sequencercontrolsendernet.cpp 		sequencercontrolreceivernet.cpp 		enginecontrolsendernet.cpp 		enginecontrolreceivernet.cpp 		moduleclassloadercontrolsendernet.cpp 		moduleclassloadercontrolreceivernet.cpp 		renderercontrolreceivernet.cpp 		renderercontrolsendernet.cpp 		modelcontrolreceivernet.cpp 		moduledatareceivernet.cpp 		moduledatasendernet.cpp 		moduleclassnamereceivernet.cpp 		moduleclassnamesendernet.cpp 		moduleconstructiondumbreceivernet.cpp 		modelcontrolsendernet.cpp 		moduleconstructiondumbsendernet.cpp 		moduleclassinforeceivernet.cpp 		moduleclassinfosendernet.cpp 		controlvaluereceivernet.cpp 		controlvaluesendernet.cpp 		modulestatisticsreceivernet.cpp 		modulestatisticssendernet.cpp 		errorsendernet.cpp 		errorreceivernet.cpp 		graphnamereceivernet.cpp 		graphnamesendernet.cpp 		sequenceupdatereceivernet.cpp 		sequenceupdatesendernet.cpp 		sequencenamesendernet.cpp 		sequencenamereceivernet.cpp 		sequencerstatussendernet.cpp 		sequencerstatusreceivernet.cpp 		modelstatusreceivernet.cpp 		modelstatussendernet.cpp 		rendererstatusreceivernet.cpp 		rendererstatussendernet.cpp


noinst_HEADERS =  		controlvaluereceivernet.h 		controlvaluesendernet.h 		enginecontrolreceivernet.h 		enginecontrolsendernet.h 		errorreceivernet.h 		errorsendernet.h 		graphnamereceivernet.h 		graphnamesendernet.h 		modelcontrolreceivernet.h 		modelcontrolsendernet.h 		moduleclassinforeceivernet.h 		moduleclassinfosendernet.h 		moduleclassloadercontrolreceivernet.h 		moduleclassloadercontrolsendernet.h 		moduleclassnamereceivernet.h 		moduleclassnamesendernet.h 		moduleconstructiondumbreceivernet.h 		moduleconstructiondumbsendernet.h 		moduledatareceivernet.h 		moduledatasendernet.h 		modulestatisticsreceivernet.h 		modulestatisticssendernet.h 		nodelcontrolreceivertest.h 		renderercontrolreceivernet.h 		renderercontrolsendernet.h 		sequencenamereceivernet.h 		sequencenamesendernet.h 		sequencercontrolreceivernet.h 		sequencercontrolsendernet.h 		sequenceupdatereceivernet.h 		sequenceupdatesendernet.h 		sequencerstatussendernet.h 		sequencerstatusreceivernet.h 		modelstatusreceivernet.h 		modelstatussendernet.h 		rendererstatusreceivernet.h 		rendererstatussendernet.h


DISTCLEANFILES = *sendernet.cpp *sendernet.h *receivernet.cpp *receivernet.h
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../../../config.h
CONFIG_CLEAN_FILES = 
LIBRARIES =  $(noinst_LIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I../../..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
X_CFLAGS = @X_CFLAGS@
X_LIBS = @X_LIBS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
libnetinterfaces_a_LIBADD = 
libnetinterfaces_a_OBJECTS =  sequencercontrolsendernet.$(OBJEXT) \
sequencercontrolreceivernet.$(OBJEXT) enginecontrolsendernet.$(OBJEXT) \
enginecontrolreceivernet.$(OBJEXT) \
moduleclassloadercontrolsendernet.$(OBJEXT) \
moduleclassloadercontrolreceivernet.$(OBJEXT) \
renderercontrolreceivernet.$(OBJEXT) renderercontrolsendernet.$(OBJEXT) \
modelcontrolreceivernet.$(OBJEXT) moduledatareceivernet.$(OBJEXT) \
moduledatasendernet.$(OBJEXT) moduleclassnamereceivernet.$(OBJEXT) \
moduleclassnamesendernet.$(OBJEXT) \
moduleconstructiondumbreceivernet.$(OBJEXT) \
modelcontrolsendernet.$(OBJEXT) \
moduleconstructiondumbsendernet.$(OBJEXT) \
moduleclassinforeceivernet.$(OBJEXT) moduleclassinfosendernet.$(OBJEXT) \
controlvaluereceivernet.$(OBJEXT) controlvaluesendernet.$(OBJEXT) \
modulestatisticsreceivernet.$(OBJEXT) \
modulestatisticssendernet.$(OBJEXT) errorsendernet.$(OBJEXT) \
errorreceivernet.$(OBJEXT) graphnamereceivernet.$(OBJEXT) \
graphnamesendernet.$(OBJEXT) sequenceupdatereceivernet.$(OBJEXT) \
sequenceupdatesendernet.$(OBJEXT) sequencenamesendernet.$(OBJEXT) \
sequencenamereceivernet.$(OBJEXT) sequencerstatussendernet.$(OBJEXT) \
sequencerstatusreceivernet.$(OBJEXT) modelstatusreceivernet.$(OBJEXT) \
modelstatussendernet.$(OBJEXT) rendererstatusreceivernet.$(OBJEXT) \
rendererstatussendernet.$(OBJEXT)
AR = ar
CXXFLAGS = @CXXFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
HEADERS =  $(noinst_HEADERS)

DIST_COMMON =  Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP_ENV = --best
SOURCES = $(libnetinterfaces_a_SOURCES)
OBJECTS = $(libnetinterfaces_a_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu --include-deps base/src/netinterfaces/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-noinstLIBRARIES:

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

distclean-noinstLIBRARIES:

maintainer-clean-noinstLIBRARIES:

.c.o:
	$(COMPILE) -c $<

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.c.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libnetinterfaces.a: $(libnetinterfaces_a_OBJECTS) $(libnetinterfaces_a_DEPENDENCIES)
	-rm -f libnetinterfaces.a
	$(AR) cru libnetinterfaces.a $(libnetinterfaces_a_OBJECTS) $(libnetinterfaces_a_LIBADD)
	$(RANLIB) libnetinterfaces.a
.cpp.o:
	$(CXXCOMPILE) -c $<
.cpp.obj:
	$(CXXCOMPILE) -c `cygpath -w $<`
.cpp.lo:
	$(LTCXXCOMPILE) -c $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags -o $$here/TAGS $(ETAGS_ARGS) $$tags  $$unique $(LISP))

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = base/src/netinterfaces

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
controlvaluereceivernet.o: controlvaluereceivernet.cpp \
	controlvaluereceivernet.h ../interfaces/icontrolvaluereceiver.h \
	../net/itagger.h ../net/isender.h ../net/idatalistener.h \
	../utils/buffer.h ../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
controlvaluesendernet.o: controlvaluesendernet.cpp \
	controlvaluesendernet.h ../interfaces/icontrolvaluesender.h \
	../net/itaginterpreter.h ../interfaces/icontrolvaluereceiver.h \
	../utils/buffer.h ../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
enginecontrolreceivernet.o: enginecontrolreceivernet.cpp \
	enginecontrolreceivernet.h \
	../interfaces/ienginecontrolreceiver.h ../net/itagger.h \
	../net/isender.h ../net/idatalistener.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
enginecontrolsendernet.o: enginecontrolsendernet.cpp \
	enginecontrolsendernet.h ../interfaces/ienginecontrolsender.h \
	../net/itaginterpreter.h ../interfaces/ienginecontrolreceiver.h \
	../utils/buffer.h ../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
errorreceivernet.o: errorreceivernet.cpp errorreceivernet.h \
	../interfaces/ierrorreceiver.h ../net/itagger.h \
	../net/isender.h ../net/idatalistener.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
errorsendernet.o: errorsendernet.cpp errorsendernet.h \
	../interfaces/ierrorsender.h ../net/itaginterpreter.h \
	../interfaces/ierrorreceiver.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
graphnamereceivernet.o: graphnamereceivernet.cpp graphnamereceivernet.h \
	../interfaces/igraphnamereceiver.h ../net/itagger.h \
	../net/isender.h ../net/idatalistener.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
graphnamesendernet.o: graphnamesendernet.cpp graphnamesendernet.h \
	../interfaces/igraphnamesender.h ../net/itaginterpreter.h \
	../interfaces/igraphnamereceiver.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
modelcontrolreceivernet.o: modelcontrolreceivernet.cpp \
	modelcontrolreceivernet.h ../interfaces/imodelcontrolreceiver.h \
	../net/itagger.h ../net/isender.h ../net/idatalistener.h \
	../utils/buffer.h ../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
modelcontrolsendernet.o: modelcontrolsendernet.cpp \
	modelcontrolsendernet.h ../interfaces/imodelcontrolsender.h \
	../net/itaginterpreter.h ../interfaces/imodelcontrolreceiver.h \
	../utils/buffer.h ../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
modelstatusreceivernet.o: modelstatusreceivernet.cpp \
	modelstatusreceivernet.h ../interfaces/imodelstatusreceiver.h \
	../net/itagger.h ../net/isender.h ../net/idatalistener.h \
	../utils/buffer.h ../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
modelstatussendernet.o: modelstatussendernet.cpp modelstatussendernet.h \
	../interfaces/imodelstatussender.h ../net/itaginterpreter.h \
	../interfaces/imodelstatusreceiver.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
moduleclassinforeceivernet.o: moduleclassinforeceivernet.cpp \
	moduleclassinforeceivernet.h \
	../interfaces/imoduleclassinforeceiver.h ../net/itagger.h \
	../net/isender.h ../net/idatalistener.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
moduleclassinfosendernet.o: moduleclassinfosendernet.cpp \
	moduleclassinfosendernet.h \
	../interfaces/imoduleclassinfosender.h ../net/itaginterpreter.h \
	../interfaces/imoduleclassinforeceiver.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
moduleclassloadercontrolreceivernet.o: \
	moduleclassloadercontrolreceivernet.cpp \
	moduleclassloadercontrolreceivernet.h \
	../interfaces/imoduleclassloadercontrolreceiver.h \
	../net/itagger.h ../net/isender.h ../net/idatalistener.h \
	../utils/buffer.h ../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
moduleclassloadercontrolsendernet.o: \
	moduleclassloadercontrolsendernet.cpp \
	moduleclassloadercontrolsendernet.h \
	../interfaces/imoduleclassloadercontrolsender.h \
	../net/itaginterpreter.h \
	../interfaces/imoduleclassloadercontrolreceiver.h \
	../utils/buffer.h ../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
moduleclassnamereceivernet.o: moduleclassnamereceivernet.cpp \
	moduleclassnamereceivernet.h \
	../interfaces/imoduleclassnamereceiver.h ../net/itagger.h \
	../net/isender.h ../net/idatalistener.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
moduleclassnamesendernet.o: moduleclassnamesendernet.cpp \
	moduleclassnamesendernet.h \
	../interfaces/imoduleclassnamesender.h ../net/itaginterpreter.h \
	../interfaces/imoduleclassnamereceiver.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
moduleconstructiondumbreceivernet.o: \
	moduleconstructiondumbreceivernet.cpp \
	moduleconstructiondumbreceivernet.h \
	../interfaces/imoduleconstructiondumbreceiver.h \
	../net/itagger.h ../net/isender.h ../net/idatalistener.h \
	../utils/buffer.h ../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
moduleconstructiondumbsendernet.o: moduleconstructiondumbsendernet.cpp \
	moduleconstructiondumbsendernet.h \
	../interfaces/imoduleconstructiondumbsender.h \
	../net/itaginterpreter.h \
	../interfaces/imoduleconstructiondumbreceiver.h \
	../utils/buffer.h ../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
moduledatareceivernet.o: moduledatareceivernet.cpp \
	moduledatareceivernet.h ../interfaces/imoduledatareceiver.h \
	../net/itagger.h ../net/isender.h ../net/idatalistener.h \
	../utils/buffer.h ../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
moduledatasendernet.o: moduledatasendernet.cpp moduledatasendernet.h \
	../interfaces/imoduledatasender.h ../net/itaginterpreter.h \
	../interfaces/imoduledatareceiver.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
modulestatisticsreceivernet.o: modulestatisticsreceivernet.cpp \
	modulestatisticsreceivernet.h \
	../interfaces/imodulestatisticsreceiver.h ../net/itagger.h \
	../net/isender.h ../net/idatalistener.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
modulestatisticssendernet.o: modulestatisticssendernet.cpp \
	modulestatisticssendernet.h \
	../interfaces/imodulestatisticssender.h \
	../net/itaginterpreter.h \
	../interfaces/imodulestatisticsreceiver.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
renderercontrolreceivernet.o: renderercontrolreceivernet.cpp \
	renderercontrolreceivernet.h \
	../interfaces/irenderercontrolreceiver.h ../net/itagger.h \
	../net/isender.h ../net/idatalistener.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
renderercontrolsendernet.o: renderercontrolsendernet.cpp \
	renderercontrolsendernet.h \
	../interfaces/irenderercontrolsender.h ../net/itaginterpreter.h \
	../interfaces/irenderercontrolreceiver.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
rendererstatusreceivernet.o: rendererstatusreceivernet.cpp \
	rendererstatusreceivernet.h \
	../interfaces/irendererstatusreceiver.h ../net/itagger.h \
	../net/isender.h ../net/idatalistener.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
rendererstatussendernet.o: rendererstatussendernet.cpp \
	rendererstatussendernet.h ../interfaces/irendererstatussender.h \
	../net/itaginterpreter.h \
	../interfaces/irendererstatusreceiver.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
sequencenamereceivernet.o: sequencenamereceivernet.cpp \
	sequencenamereceivernet.h ../interfaces/isequencenamereceiver.h \
	../net/itagger.h ../net/isender.h ../net/idatalistener.h \
	../utils/buffer.h ../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
sequencenamesendernet.o: sequencenamesendernet.cpp \
	sequencenamesendernet.h ../interfaces/isequencenamesender.h \
	../net/itaginterpreter.h ../interfaces/isequencenamereceiver.h \
	../utils/buffer.h ../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
sequencercontrolreceivernet.o: sequencercontrolreceivernet.cpp \
	sequencercontrolreceivernet.h \
	../interfaces/isequencercontrolreceiver.h ../net/itagger.h \
	../net/isender.h ../net/idatalistener.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
sequencercontrolsendernet.o: sequencercontrolsendernet.cpp \
	sequencercontrolsendernet.h \
	../interfaces/isequencercontrolsender.h \
	../net/itaginterpreter.h \
	../interfaces/isequencercontrolreceiver.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
sequencerstatusreceivernet.o: sequencerstatusreceivernet.cpp \
	sequencerstatusreceivernet.h \
	../interfaces/isequencerstatusreceiver.h ../net/itagger.h \
	../net/isender.h ../net/idatalistener.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
sequencerstatussendernet.o: sequencerstatussendernet.cpp \
	sequencerstatussendernet.h \
	../interfaces/isequencerstatussender.h ../net/itaginterpreter.h \
	../interfaces/isequencerstatusreceiver.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
sequenceupdatereceivernet.o: sequenceupdatereceivernet.cpp \
	sequenceupdatereceivernet.h \
	../interfaces/isequenceupdatereceiver.h ../net/itagger.h \
	../net/isender.h ../net/idatalistener.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h
sequenceupdatesendernet.o: sequenceupdatesendernet.cpp \
	sequenceupdatesendernet.h ../interfaces/isequenceupdatesender.h \
	../net/itaginterpreter.h \
	../interfaces/isequenceupdatereceiver.h ../utils/buffer.h \
	../utils/bufferstream.h ../utils/string_.h \
	../utils/bufferutils.h

info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am:
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am:
uninstall: uninstall-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-noinstLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags \
		mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-noinstLIBRARIES clean-compile clean-libtool clean-tags \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-noinstLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-noinstLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-noinstLIBRARIES distclean-noinstLIBRARIES \
clean-noinstLIBRARIES maintainer-clean-noinstLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir info-am info \
dvi-am dvi check check-am installcheck-am installcheck install-exec-am \
install-exec install-data-am install-data install-am install \
uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


%receivernet.h: ../interfaces/%.if
	python @srcdir@/../../nic.py nrh . $<

%receivernet.cpp: ../interfaces/%.if %receivernet.h
	python @srcdir@/../../nic.py nrc . $<

%sendernet.h: ../interfaces/%.if
	python @srcdir@/../../nic.py nsh . $<

%sendernet.cpp: ../interfaces/%.if %sendernet.h
	python @srcdir@/../../nic.py nsc . $<

# TESTS=netinterfacetest
# check_PROGRAMS = netinterfacetest
# netinterfacetest_SOURCES = testmain.cpp classinfotest.cpp nodelcontrolreceivertest.cpp classinfotest.h
# netinterfacetest_LDADD = ../TestFramework/libtestframework.la libnetinterfaces.a ../utils/libutils.a

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
